
#version 400
layout(quads, equal_spacing, cw) in;

uniform float scale;

uniform vec3 position;

void main()
{
		float u = gl_TessCoord.x;
		float v = gl_TessCoord.y;

		vec4 p0 = gl_in[0].gl_Position;
		vec4 p1 = gl_in[1].gl_Position;
		vec4 p2 = gl_in[2].gl_Position;
		vec4 p3 = gl_in[3].gl_Position;
		// Linear interpolation
		vec4 interpolatedPos = (p0 * (1-u) * (1-v)) + (p1 * u * (1-v)) + (p3 * v * (1-u)) + (p2 * u * v);

		vec3 scaledPos = interpolatedPos.xyz * scale;
		
		vec3 worldPos = scaledPos + position;

		gl_Position = vec4(worldPos,1);
}